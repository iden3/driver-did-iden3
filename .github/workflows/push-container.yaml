# This workflow builds a docker image and pushes it to GitHub Container Registry
# We need to have this image in public registry for compatibility with universal resolver
name: Publish driver-did-iden3
on:
  push:
    tags:
      - 'v*'
      - '!v*.*.*-dev'
  workflow_dispatch:

jobs:
  build_driver:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout driver-did-iden3
        uses: actions/checkout@v3
        with:
          path: driver-did-iden3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build file with supported networks
        run: |
          cd driver-did-iden3
          echo -e "polygon:" > resolvers.settings.yaml
          echo -e "  amoy:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_POLYGON_AMOY }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_POLYGON_AMOY }}" >> resolvers.settings.yaml
          echo -e "  main:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_POLYGON_MAIN }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_POLYGON_MAIN }}" >> resolvers.settings.yaml
          echo -e "  cardona:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_UNIFIED }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_POLYGON_ZKEVM_CARDONA }}" >> resolvers.settings.yaml
          echo -e "  zkevm:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_UNIFIED }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_POLYGON_ZKEVM_MAIN }}" >> resolvers.settings.yaml
          echo -e "privado:" >> resolvers.settings.yaml
          echo -e "  main:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_UNIFIED }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_PRIVADO_MAIN }}" >> resolvers.settings.yaml
          echo -e "  test:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_UNIFIED }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_PRIVADO_TEST }}" >> resolvers.settings.yaml
          echo -e "eth:" >> resolvers.settings.yaml
          echo -e "  main:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_UNIFIED }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_ETHEREUM_MAIN }}" >> resolvers.settings.yaml
          echo -e "  sepolia:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_UNIFIED }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_ETHEREUM_SEPOLIA }}" >> resolvers.settings.yaml
          echo -e "linea:" >> resolvers.settings.yaml
          echo -e "  main:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_UNIFIED }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_LINEA_MAIN }}" >> resolvers.settings.yaml
          echo -e "  sepolia:" >> resolvers.settings.yaml
          echo -e "    contractAddress: ${{ env.STATE_UNIFIED }}" >> resolvers.settings.yaml
          echo -e "    networkURL: ${{ secrets.RPC_LINEA_SEPOLIA }}" >> resolvers.settings.yaml

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: build and deploy to DockerHub
        run: |
          cd driver-did-iden3 && \
          docker buildx build --push \
           --platform linux/amd64,linux/arm64 \
           -t ghcr.io/iden3/driver-did-iden3:${{ github.ref_name }} \
           -t ghcr.io/iden3/driver-did-iden3:latest .
